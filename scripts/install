#!/bin/bash

#
# symlink dot files and directories
#
DOT_FILES=(vimrc tmux.conf zshrc zshenv gitconfig gitignore_global gitattributes tigrc gemrc sshrc)
DOT_DIRECTORIES=(vim bundle git_template dinghy)

NEED_RESTART=0

for file in ${DOT_FILES[@]}
do
  if [ -e $HOME/.$file ]; then
    echo "[WARN] $file file is existed."
  else
    ln -s $HOME/dotfiles/$file $HOME/.$file
    echo "[INFO] $file symlinked."
    NEED_RESTART=1
  fi
done

for directory in ${DOT_DIRECTORIES[@]}
do
  if [ -d $HOME/.$directory ]; then
    echo "[WARN] .$directory directory is existed."
  else
    ln -s $HOME/dotfiles/$directory $HOME/.$directory
    NEED_RESTART=1
    echo "[INFO] $directory symlinked."
  fi
done

#
# symlink diff-highlight
#
if [ -L /usr/local/bin/diff-highlight ]; then
  echo "[WARN] Symlinked diff-highlight"
else
  find /opt/boxen -name diff-highlight | awk 'NR == 2 {print "sudo ln -s",$0,"/usr/local/bin/"}'
  NEED_RESTART=1
  echo "[INFO] diff-highlight symlinked."
fi

#
# ghq
#
if [ -d $HOME/src/github.com/motemen ]; then
  echo "[WARN] Exist ghq"
else
  go get github.com/motemen/ghq
  NEED_RESTART=1
  echo "[INFO] install ghq."
fi

#
# nvm
# https://github.com/creationix/nvm
if [[ -s ~/.nvm ]] ; then
  echo "[WARN] Exist nvm"
else
  echo "[INFO] installing nvm...."
  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash
  echo "[INFO] installing node...."
  nvm install v7.9.0
  NEED_RESTART=1
fi

#
# xcode
#
XCODE_HOME=${HOME}/Library/Developer/Xcode/UserData/FontAndColorThemes
if [ -L ${XCODE_HOME}/Solarized\ -\ Ae06710.dvtcolortheme ]; then
  echo "[WARN] Exist xcode themes"
else
  echo "[INFO] Copy xcode themes"
  mkdir -p ~/Library/Developer/Xcode/UserData/FontAndColorThemes/
  ln -s ${HOME}/dotfiles/themes/apple-xcode4-solarized/Solarized\ -\ Ae06710.dvtcolortheme ${XCODE_HOME}
  NEED_RESTART=1
fi

#
# Python
#
packages=(awscli)

for package in ${packages[@]}
do
  pip list | grep $package
  if [ $? -eq 0 ]; then
    echo "[WARN] $package is already installed"
  else
    pip install $package
    NEED_RESTART=1
    echo "[INFO] install $package"
  fi
done

#
# google cloud sdk
#
if [ -d $HOME/google-cloud-sdk ]; then
  echo "[WARN] Exist google cloud sdk"
else
  echo "[INFO] install google cloud sdk"
  curl https://sdk.cloud.google.com | bash
  NEED_RESTART=1
fi


if [ $NEED_RESTART -eq 1 ]; then
  exec -l $SHELL
fi
